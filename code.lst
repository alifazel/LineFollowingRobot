CCS PCM C Compiler, Version 4.117, 93511182               26-Feb-13 18:19

               Filename: Y:\Robot Project\first attempt.lst

               ROM used: 177 words (4%)
                         Largest free fragment is 2048
               RAM used: 18 (7%) at main() level
                         18 (7%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   075
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  BTFSS  0B.5
001B:  GOTO   01E
001C:  BTFSC  0B.2
001D:  GOTO   02F
001E:  MOVF   22,W
001F:  MOVWF  04
0020:  MOVF   23,W
0021:  MOVWF  77
0022:  MOVF   24,W
0023:  MOVWF  78
0024:  MOVF   25,W
0025:  MOVWF  79
0026:  MOVF   26,W
0027:  MOVWF  7A
0028:  MOVF   27,W
0029:  MOVWF  0A
002A:  SWAPF  21,W
002B:  MOVWF  03
002C:  SWAPF  7F,F
002D:  SWAPF  7F,W
002E:  RETFIE
002F:  BCF    0A.3
0030:  GOTO   047
.................... #include <16F648A.h> 
.................... //////// Standard Header file for the PIC16F648A device //////////////// 
.................... #device PIC16F648A 
.................... #list 
....................  
.................... #use delay(clock=4000000) 
.................... #fuses NOWDT, INTRC, NOPUT, NOPROTECT, NOLVP, NOMCLR 
....................  
.................... int const LOOKUPTABLE[4] = {0B1001,0B1100,0B0110,0B0011}; 
.................... int const DIR[2]={1,3}; 
.................... int const SPEED[4]={40,20,10,5}; 
....................  
.................... struct pin{ 
.................... 	int direction1:1;		//Port A 
.................... 	int direction2:1; 
.................... 	int speed1: 2; 
.................... 	int speed2: 2; 
.................... 	int unused: 2; 
....................  
.................... 	int Output1:4;			//Port B 
.................... 	int Output2:4; 
.................... }; 
....................  
.................... struct pin IO_data; 
.................... struct pin IO_status; 
....................  
.................... #byte IO_data = 0x05 
.................... #byte IO_status = 0x85 
.................... int TableIndex_motor1=0; 
.................... int TableIndex_motor2=0; 
.................... int c1=0; 
.................... int c2=0; 
....................  
.................... void move_motor1(){ 
.................... 	IO_data.Output1 = LOOKUPTABLE[TableIndex_motor1]; 
*
004C:  MOVF   28,W
004D:  CALL   031
004E:  MOVWF  78
004F:  ANDLW  0F
0050:  MOVWF  77
0051:  MOVLW  F0
0052:  ANDWF  06,W
0053:  IORWF  77,W
0054:  MOVWF  06
.................... 	TableIndex_motor1 = ((TableIndex_motor1+DIR[IO_data.direction1])%4); 
0055:  MOVLW  00
0056:  BTFSC  05.0
0057:  MOVLW  01
0058:  CALL   039
0059:  MOVWF  78
005A:  ADDWF  28,W
005B:  ANDLW  03
005C:  MOVWF  28
.................... 	c1=0; 
005D:  CLRF   2A
.................... } 
005E:  BCF    0A.3
005F:  GOTO   0A5 (RETURN)
....................  
.................... void move_motor2(){ 
.................... 	IO_data.Output2 = LOOKUPTABLE[TableIndex_motor2]; 
0060:  MOVF   29,W
0061:  CALL   031
0062:  MOVWF  78
0063:  SWAPF  78,W
0064:  ANDLW  F0
0065:  MOVWF  77
0066:  MOVLW  0F
0067:  ANDWF  06,W
0068:  IORWF  77,W
0069:  MOVWF  06
.................... 	TableIndex_motor2 = ((TableIndex_motor2+DIR[IO_data.direction2])%4); 
006A:  MOVLW  00
006B:  BTFSC  05.1
006C:  MOVLW  01
006D:  CALL   039
006E:  MOVWF  78
006F:  ADDWF  29,W
0070:  ANDLW  03
0071:  MOVWF  29
.................... 	c2=0; 
0072:  CLRF   2B
.................... } 
0073:  BCF    0A.3
0074:  GOTO   0AF (RETURN)
....................  
.................... #int_RTCC 
.................... void Timer0_isr() 
.................... { 
.................... 	c1++; 
*
0047:  INCF   2A,F
.................... 	c2++; 
0048:  INCF   2B,F
.................... } 
....................  
0049:  BCF    0B.2
004A:  BCF    0A.3
004B:  GOTO   01E
.................... void main(){ 
*
0075:  CLRF   04
0076:  BCF    03.7
0077:  MOVLW  1F
0078:  ANDWF  03,F
0079:  CLRF   28
007A:  CLRF   29
007B:  CLRF   2A
007C:  CLRF   2B
007D:  MOVLW  07
007E:  MOVWF  1F
....................  
.................... 	IO_status.Output1 = 0b0000; 
007F:  MOVLW  F0
0080:  BSF    03.5
0081:  ANDWF  06,W
0082:  MOVWF  06
.................... 	IO_status.Output2 = 0b0000; 
0083:  MOVLW  0F
0084:  ANDWF  06,W
0085:  MOVWF  06
.................... 	IO_status.direction1 = 0b1; 
0086:  BSF    05.0
.................... 	IO_status.direction2 = 0b1; 
0087:  BSF    05.1
.................... 	IO_status.speed1 = 0b11; 
0088:  MOVLW  F3
0089:  ANDWF  05,W
008A:  IORLW  0C
008B:  MOVWF  05
.................... 	IO_status.speed2 = 0b11; 
008C:  MOVLW  CF
008D:  ANDWF  05,W
008E:  IORLW  30
008F:  MOVWF  05
.................... 	enable_interrupts(INT_RTCC); 
0090:  BCF    03.5
0091:  BSF    0B.5
.................... 	enable_interrupts(GLOBAL); 
0092:  MOVLW  C0
0093:  IORWF  0B,F
.................... 	 
.................... 	while(1) 
.................... 	{ 
.................... 		setup_timer_0(RTCC_INTERNAL|RTCC_DIV_4); 
0094:  BSF    03.5
0095:  MOVF   01,W
0096:  ANDLW  C0
0097:  IORLW  01
0098:  MOVWF  01
.................... 		if(c1== SPEED[IO_data.speed1]) 
0099:  BCF    03.5
009A:  MOVF   05,W
009B:  MOVWF  77
009C:  RRF    77,F
009D:  RRF    77,W
009E:  ANDLW  03
009F:  CALL   03F
00A0:  MOVWF  78
00A1:  SUBWF  2A,W
00A2:  BTFSS  03.2
00A3:  GOTO   0A5
.................... 		{ 
.................... 			move_motor1(); 
00A4:  GOTO   04C
.................... 		} 
.................... 	 
.................... 		if(c2== SPEED[IO_data.speed2]) 
00A5:  MOVF   05,W
00A6:  MOVWF  77
00A7:  SWAPF  77,W
00A8:  ANDLW  03
00A9:  CALL   03F
00AA:  MOVWF  78
00AB:  SUBWF  2B,W
00AC:  BTFSS  03.2
00AD:  GOTO   0AF
.................... 		{ 
.................... 			move_motor2(); 
00AE:  GOTO   060
.................... 		} 
.................... 	} 
00AF:  GOTO   094
.................... } 
00B0:  SLEEP

Configuration Fuses:
   Word  1: 3F59   NOWDT NOPUT INTRC NOMCLR BROWNOUT NOLVP NOCPD NOPROTECT
